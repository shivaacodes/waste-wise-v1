generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Report {
  id        String   @id @default(cuid())
  userId    String // ID of the user who submitted the report
  location  String // Location of the reported incident
  details   String // Description of the incident
  imageUrl  String? // Optional URL of an image showing the incident
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum UserRole {
  WORKER
  RESIDENT
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  username      String?
  name          String?   @unique
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  about         String?
  password      String?
  role          UserRole
  accounts      Account[]
  sessions      Session[]
  reports       Report[]

  @@index([email])
  @@index([name])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
